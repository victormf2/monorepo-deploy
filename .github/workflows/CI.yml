name: Monorepo Workflow

on:
  workflow_dispatch:

jobs:
  determine_services:
    name: Determine affected services
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.determine_services.outputs.services }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine affected services
        id: determine_services
        run: |
          chmod +x ./determine_services.sh
          services=$(./determine_services.sh)
          echo "services=$services" >> $GITHUB_OUTPUT

  frontend_staging:
    name: Deploy frontend staging
    needs: determine_services
    runs-on: ubuntu-latest
    if: "contains(needs.determine_services.outputs.services, 'frontend')"
    steps:
      - name: Build
        run: echo "Deploy frontend staging"

  frontend_production:
    name: Deploy frontend production
    environment: Production
    needs:
      - frontend_staging
    runs-on: ubuntu-latest
    if: always() && !cancelled() && needs.frontend_staging.result == 'success'
    steps:
      - name: Build
        run: echo "Deploy frontend production"

  backend_staging:
    name: Deploy backend staging
    needs: determine_services
    runs-on: ubuntu-latest
    if: "contains(needs.determine_services.outputs.services, 'backend')"
    steps:
      - name: Build
        run: echo "Building backend"

  backend_production:
    name: Deploy backend production
    environment: Production
    needs:
      - backend_staging
    runs-on: ubuntu-latest
    if: always() && !cancelled() && needs.backend_staging.result == 'success'
    steps:
      - name: Build
        run: echo "Deploy backend production"
